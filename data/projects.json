{
	"projects": [
		{
			"id": 1,
			"slug": "world-animal-protection",
			"title": "World animal protection [Full stack]",
			"description": "This project is the final project in the course. This is a wordpress custom theme eCommerce website, the css in this site is using a css framework called Foundation(from Zurb), it is fully responsive and lightweight. The purpose of this website is to make sure that the client(World animal protection) is able to create, remove and update their own contents(which includes text information, images, icons and products).",
			"technologies": [
				"Wordpress",
				"Wordpress Customization API",
				"Wordpress Custom theme",
				"Woocommerce",
				"PHP",
				"HTML5",
				"CSS3",
				"FoundationPress"
			],
			"projectSite": "#",
			"projectCode": "https://github.com/VictorYang2017/victoryang2017.github.io/tree/master/projects/world-animal-protection",
			"projectImages": {
				"mainImage": "world-animal-protection-1",
				"subImages": ["world-animal-protection-2", "world-animal-protection-3"]
			}
		},
		{
			"id": 2,
			"slug": "books-library-manager",
			"title": "Books library manager [Full stack]",
			"description": "This is a website that manages different kinds of books, it's like a small books library. The backend of this website is built using Express.js with a template engine called Pug and I also uses an ORM(Sequelize) to query and manipulate data from a database(Sqlite3). This is a CRUD website, user can create, update, delete a book and read what books they have.",
			"technologies": [
				"Node.js",
				"Express.js",
				"Pug",
				"Template engine",
				"Sequelize",
				"Sequelize CLI",
				"Sqlite3",
				"CSS3"
			],
			"projectSite": "#",
			"projectCode": "https://github.com/VictorYang2017/victoryang2017.github.io/tree/master/projects/books-library-manager",
			"projectImages": {
				"mainImage": "books-library-manager-2",
				"subImages": ["books-library-manager-3", "books-library-manager-4"]
			}
		},
		{
			"id": 3,
			"slug": "employee-data-look-up",
			"title": "Employee data look up",
			"description": "With this site, employer can do a search on their employees, employer just need to enter some letters or words inside of search box and the site will automatically do an employee name filtering and only shows employees that their name are match to the search box data. The lightbox model gives more detailed information about an employee to the employer and if search box is used, the \"next\" & \"prev\" button only go through filtered employee's rather than all employees.",
			"technologies": ["HTML5", "CSS3", "Javascript", "REST API"],
			"projectSite": "https://victoryang2017.github.io/projects/employee-data-look-up",
			"projectCode": "https://github.com/VictorYang2017/victoryang2017.github.io/tree/master/projects/employee-data-look-up/FULL-PROJECT",
			"projectImages": {
				"mainImage": "employee-data-look-up-2",
				"subImages": ["employee-data-look-up-1", "employee-data-look-up-3"]
			}
		},
		{
			"id": 4,
			"slug": "most-popular-actors",
			"title": "Most popular actors [Vue.js]",
			"description": "This website uses vue.js(v3) framework and combine with GSAP animation library. This website always shows currently top five most popular actors(base on \"The Movie Database API\") and user can click on any of the top five actors to see his/her details. The front page is totally different when in mobile view.",
			"technologies": [
				"Vue.js(v3)",
				"Vue Router",
				"GSAP Animation",
				"REST API",
				"HTML5",
				"CSS3"
			],
			"projectSite": "https://victoryang2017.github.io/projects/most-popular-actors",
			"projectCode": "https://github.com/VictorYang2017/victoryang2017.github.io/tree/master/projects/most-popular-actors/FULL-PROJECT",
			"projectImages": {
				"mainImage": "movie-db-actors-1",
				"subImages": ["movie-db-actors-2", "movie-db-actors-3"]
			}
		},
		{
			"id": 5,
			"slug": "user-testimonials",
			"title": "User testimonials",
			"description": "When visited, this website retrieves data and doesn't out put all data at once, it only outputs the first five, user then can click \"More testimonials\" button to load more testimonials(loads 10 data on each click and the button becomes unclickable when all data are loaded). Currently the data are retrieved from a JSON file, it will still works if the data are retrieved from an API.",
			"technologies": ["HTML5", "CSS3", "Javascript", "JSON"],
			"projectSite": "https://victoryang2017.github.io/projects/testimonials",
			"projectCode": "https://github.com/VictorYang2017/victoryang2017.github.io/tree/master/projects/testimonials/FULL-PROJECT",
			"projectImages": {
				"mainImage": "testimonials-1",
				"subImages": ["testimonials-2", "testimonials-3"]
			}
		},
		{
			"id": 6,
			"slug": "search-accommodations",
			"title": "Search accommodations [React.js]",
			"description": "This website uses react.js framework with react hooks and I uses redux to manage the state. This is a website you can search different kinds of accommodations base on City/Region, Accommodation type, Amount of People and Amount of nights, amount of people dropdown values will change according to which accommodation type the user choose. After the results are outputed, the user can click any of them and read more details about it, also total price are all calculated base on user picked values(accommodation type and amount of nights). All accommodations data are all dummy data.",
			"technologies": [
				"React.js",
				"React Hooks",
				"React Router",
				"Redux",
				"HTML5",
				"CSS3",
				"JSON"
			],
			"projectSite": "https://victoryang2017.github.io/projects/search-accommodations",
			"projectCode": "https://github.com/VictorYang2017/victoryang2017.github.io/tree/master/projects/search-accommodations/FULL-PROJECT",
			"projectImages": {
				"mainImage": "accommodations-1",
				"subImages": ["accommodations-2", "accommodations-3"]
			}
		},
		{
			"id": 7,
			"slug": "school-courses-registry",
			"title": "School courses registry [Full stack]",
			"description": "This website is built using React.js(Class component) for the front-end and express.js with sequelize for the back-end, there is actually more technologies used in this web application(please see the \"Technologies used\" section). With this web application, logged in user can create new course, update existing course and delete a course but he/she can only update or delete the courses that belongs to himself/herself. The errors in this web application is well handled, detailed and easily understandable, when a user is either trying to sign in, sign up, create a course, updating a course, etc... if there are errors happening, it wil display on the screen with an easily understandable messages and letting the user know what is going on, what is causing the errors.",
			"technologies": [
				"React.js",
				"Class component",
				"React Router",
				"React Context API",
				"HTML5",
				"CSS3",
				"React markdown",
				"REST API",
				"Node.js",
				"Express.js",
				"Sequelize",
				"Sequelize CLI",
				"bcrypt.js",
				"Sqlite3"
			],
			"projectSite": "#",
			"projectCode": "https://github.com/VictorYang2017/victoryang2017.github.io/tree/master/projects/school-courses-registry",
			"projectImages": {
				"mainImage": "school-courses-registry-3",
				"subImages": ["school-courses-registry-1", "school-courses-registry-4"]
			}
		},
		{
			"id": 8,
			"slug": "search-people",
			"title": "Search people",
			"description": "This site uses pagination to display large amount of data(people infos). Users can do a search on this site and the pagination will change base on the result, so if the result only found 1 person then there is only one page but if the result found 18 people then there will be three pages.",
			"technologies": ["HTML5", "CSS3", "Javascript", "REST API"],
			"projectSite": "https://victoryang2017.github.io/projects/search-people",
			"projectCode": "https://github.com/VictorYang2017/victoryang2017.github.io/tree/master/projects/search-people/FULL-PROJECT",
			"projectImages": {
				"mainImage": "search-people-1",
				"subImages": ["search-people-2", "search-people-3"]
			}
		},
		{
			"id": 9,
			"slug": "my-portfolio-site",
			"title": "My portfolio site",
			"description": "This website is fully responsive, it works from a small mobile device to a 4k resolution super large device, it's a 4k ready website. This website uses a JS module bundler called webpack, which I set up two files(\"webpack.dev.js\" \"webpack.prod.js\") and config the webpack from ground up, so that I can use scss, load images, output different kinds of files, etc... This is actually my second portfolio site, I did another one before this but did not like the design and how I structure my project codes, so I decided to create a new portfolio site, which is the current site.",
			"technologies": [
				"HTML5",
				"CSS3",
				"Javascript",
				"SCSS",
				"Webpack",
				"Webpack CLI",
				"JSON",
				"AOS JS library"
			],
			"projectSite": "https://victoryang2017.github.io",
			"projectCode": "https://github.com/VictorYang2017/victoryang2017.github.io/tree/master/projects/my-portfolio-site",
			"projectImages": {
				"mainImage": "portfolio-website-3",
				"subImages": ["portfolio-website-1", "portfolio-website-2"]
			}
		},
		{
			"id": 10,
			"slug": "simple-crud-todo",
			"title": "Simple crud todo",
			"description": "A simple todo list that a user can create read update and delete. It uses date API and it is wrote in javascript OOP way.",
			"technologies": ["HTML5", "CSS3", "Javascript OOP", "JS Date API"],
			"projectSite": "https://victoryang2017.github.io/projects/simple-crud-todo",
			"projectCode": "https://github.com/VictorYang2017/victoryang2017.github.io/tree/master/projects/simple-crud-todo/FULL-PROJECT",
			"projectImages": {
				"mainImage": "simple-crud-todo-list-1",
				"subImages": ["simple-crud-todo-list-2", "simple-crud-todo-list-3"]
			}
		},
		{
			"id": 11,
			"slug": "website-login-ui",
			"title": "Website login UI",
			"description": "Website login UI only(no backend), this app uses jQuery and some css animation. Sign up and login form includes strict form validation.",
			"technologies": [
				"HTML5",
				"CSS3",
				"Javascript",
				"Jquery",
				"CSS Animation"
			],
			"projectSite": "https://victoryang2017.github.io/projects/website-login-ui",
			"projectCode": "https://github.com/VictorYang2017/victoryang2017.github.io/tree/master/projects/website-login-ui/FULL-PROJECT",
			"projectImages": {
				"mainImage": "website-login-1",
				"subImages": ["website-login-2", "website-login-3"]
			}
		},

		{
			"id": 0,
			"slug": "coming-soon",
			"title": "Coming soon!",
			"description": "Coming soon!",
			"technologies": ["coming soon"],
			"projectSite": "#",
			"projectCode": "#",
			"projectImages": {
				"mainImage": "#",
				"subImages": ["#", "#", "#"]
			}
		},
		{
			"id": 0,
			"slug": "coming-soon",
			"title": "Coming soon!",
			"description": "Coming soon!",
			"technologies": ["coming soon"],
			"projectSite": "#",
			"projectCode": "#",
			"projectImages": {
				"mainImage": "#",
				"subImages": ["#", "#", "#"]
			}
		},
		{
			"id": 0,
			"slug": "coming-soon",
			"title": "Coming soon!",
			"description": "Coming soon!",
			"technologies": ["coming soon"],
			"projectSite": "#",
			"projectCode": "#",
			"projectImages": {
				"mainImage": "#",
				"subImages": ["#", "#", "#"]
			}
		}
	]
}
